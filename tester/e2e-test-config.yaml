cluster:
  kops:
    stateFile: s3://k8s-kops-csi-e2e
    zones: us-west-2a,us-west-2b,us-west-2c
    nodeCount: 3
    nodeSize: c5.large
    kubernetesVersion: 1.17.0
    iamPolicies: |2
        additionalPolicies:
          node: |
            [
              {
                "Effect": "Allow",
                "Action": [
                  "elasticfilesystem:CreateAccessPoint",
                  "elasticfilesystem:DeleteAccessPoint",
                  "elasticfilesystem:DescribeFileSystems",
                  "elasticfilesystem:DescribeAccessPoints"
                ],
                "Resource": "*"
              }
            ]

build: |
  eval $(aws ecr get-login --region us-west-2 --no-include-email)
  AWS_ACCOUNT_ID=$(aws sts get-caller-identity --query Account --output text)
  IMAGE_TAG={{TEST_ID}}
  IMAGE_NAME=$AWS_ACCOUNT_ID.dkr.ecr.us-west-2.amazonaws.com/aws-efs-csi-driver
  docker build -t $IMAGE_NAME:$IMAGE_TAG .
  docker push $IMAGE_NAME:$IMAGE_TAG

install: |
  echo "Deploying driver"
  #install helm
  OS_ARCH=$(go env GOOS)-amd64
  helm_name=helm-v3.1.1-linux-amd64.tar.gz
  wget https://get.helm.sh/$helm_name
  tar xvzf $helm_name
  mv $OS_ARCH/helm /usr/local/bin/helm

  AWS_ACCOUNT_ID=$(aws sts get-caller-identity --query Account --output text)
  IMAGE_TAG={{TEST_ID}}
  IMAGE_NAME=$AWS_ACCOUNT_ID.dkr.ecr.us-west-2.amazonaws.com/aws-efs-csi-driver

  helm upgrade --install aws-efs-csi-driver \
      --set image.repository=$IMAGE_NAME \
      --set image.tag=$IMAGE_TAG \
      ./charts/aws-efs-csi-driver

uninstall: |
  echo "Removing driver"
  helm uninstall aws-efs-csi-driver

test: |
  export KUBECONFIG=$HOME/.kube/config
  cluster_name=test-cluster-{{TEST_ID}}.k8s.local
  go test ./test/e2e/ -v -timeout=0 -kubeconfig=$HOME/.kube/config --cluster-name=$cluster_name --region=us-west-2 --report-dir=$ARTIFACTS -ginkgo.focus="\[efs-csi\]" -ginkgo.skip="\[Disruptive\]"
